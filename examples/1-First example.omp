; OM File Header - Saved 2009/10/22 17:10:01
; (6.04 :patc (om-make-point 66 48) (om-make-point 50 50) (om-make-point 754 419) "No documentation " 183 0 nil "2008/11/07 15:12:13")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "1-First example" (quote ((om-load-boxcomment "comment" (om-make-point 310 233) (quote "Example of a Constraint Satisfaction Problem defined with the function cree-varliste.$$The first input of cree-varliste gives the domain of the variables, the second one gives the number of variables.$So here we ask for five variables in domain (1 2 3 4 5).$$Double click on the cree-varliste icon to see the constraint definition.$$To solve the CSP evaluate the resolution box.") "" (om-make-point 319 116) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxwithed1 (quote box-with-win) "CREE-VARLISTE" (quote cree-varliste) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "DOM" nil) (om-load-inputfun (quote input-funbox) "no documentation" "LONGUEUR" nil))) (om-make-point 133 140) nil nil nil (list (om-load-boxcomment "comment" (om-make-point 209 222) (quote "Here is the constraint definition.$$There is one constraint, =c, which states that the variable (reprsented by the i icon) must be = to 3.$$The constraint have to be connected to the state icon.$") "" (om-make-point 288 100) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 215 144) (om-make-point 23 20) 3 "3" nil) (om-load-boxcall (quote genfun) "=C" (quote =c) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "A" nil) (om-load-inputfun (quote input-funbox) "no documentation" "B" nil))) (om-make-point 146 192) nil nil nil nil 1) (om-load-var-i "i" t (om-make-point 100 100) "no documentation" nil nil nil 1) (om-load-varstate "state" t (om-make-point 142 294) (quote ((om-load-inputfun (quote input-funbox) "patch" "PATCH" nil))) nil nil) (om-load-varliste "liste" t (om-make-point 5 100) "no documentation" nil nil nil)) (quote ((3 0 2 0 nil 0) (1 0 2 1 nil 0) (2 0 4 0 nil 0))) 2 "cree-varliste" nil) (om-load-boxcall (quote genfun) "RESOLUTION" (quote resolution) (quote ((om-load-inputfun (quote input-funbox) "if" "VAR" nil))) (om-make-point 127 255) nil nil nil "resolution" 1) (om-load-boxcall (quote bastype) "aux1" (quote t) (quote nil) (om-make-point 44 78) (om-make-point 70 28) (list 1 2 3 4 5) "(1 2 3 4 5)" nil) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 214 80) (om-make-point 20 28) 5 "5" nil))) (quote ((3 0 1 0 nil 0) (4 0 1 1 nil 0) (1 0 2 0 nil 0))) nil 6.04))
